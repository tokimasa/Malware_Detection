# -*- coding: utf-8 -*-
"""
Created on Fri Mar 16 23:19:42 2018

@author: TOKIMASA
"""

import numpy as np
import matplotlib.pyplot as plt

from sklearn.ensemble import ExtraTreesClassifier

def get_feature_importance(data):
    features = list(data.columns.values)
    features_sorted = []
    X = data.drop('Label', axis=1).as_matrix()
    y = data.Label.values
    
    # Build a forest and compute the feature importances
    forest = ExtraTreesClassifier(n_estimators=250,
                                  random_state=0)
    
    forest.fit(X, y)
    importances = forest.feature_importances_
    std = np.std([tree.feature_importances_ for tree in forest.estimators_],
                 axis=0)
    indices = np.argsort(importances)[::-1]
    
    # Print the feature ranking
    print("Feature ranking:")
    
    for f in range(X.shape[1]):
        print("%d. feature %20s (%f)" % (f + 1, features[indices[f]], importances[indices[f]]))
        features_sorted.append(features[indices[f]])
    
    # Plot the feature importances of the forest
    plt.figure()
    plt.title("Feature importances")
    plt.bar(range(X.shape[1]), importances[indices],
           color="r", yerr=std[indices], align="center")
    plt.xticks(range(X.shape[1]), features_sorted, rotation=70)
    plt.xlim([-1, X.shape[1]])
    plt.show()
    return